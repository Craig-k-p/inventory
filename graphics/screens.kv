#: include graphics/toolbar.kv
#: include graphics/row.kv
#: include graphics/datagrid.kv


<AccountOverviewScreen>:
    name: 'containers'
    # Pass these back to the class variable definitions that = ObjectProperty(None)
    toolbar: toolbar
    parent_layout: parent_layout
    data_grid: data_grid
    app: app

    BoxLayout:
        # Allows the ScreenManager instance to refer to this screen
        id: parent_layout
        orientation: 'vertical'

        # Toolbar goes on top
        Toolbar:
            id: toolbar

        ScrollView:
            id: scroll_view
            DataGrid:
                id: data_grid


<ContainerOverviewScreen>:
    name: 'contents'
    # Pass these back to the class variable definitions that = ObjectProperty(None)
    toolbar: toolbar
    parent_layout: parent_layout
    data_grid: data_grid
    app: app

    BoxLayout:
        # Allows the ScreenManager instance to refer to this screen
        id: parent_layout
        orientation: 'vertical'

        # Toolbar goes on top
        Toolbar:
            id: toolbar

        ScrollView:
            id: scroll_view
            DataGrid:
                id: data_grid


# Set custom fonts for Buttons, TextInputs, and Labels
<Button>:
    # These settings affect all Buttons in every file unless overridden
    size_hint: (None, None)
    bold: True
    font_size: 18

<TextInput>:
    bold: True
    error: False
    write_tab: False
    multiline: False
    color: app.settings['text color']
    background_color:
        (.8,.8,1,1) if self.focus \
        else ((1,.8,.8,1) if self.error \
        else (1,1,1,1))

<Label>:
    bold: True
    color: app.settings['text color']

<CenterAnchorLayout>:  # Inherits from AnchorLayout in screens.py
    anchor_x: 'center'
    anchor_y: 'center'

# These are custom classes inherited from Button, TextInput, etc
<FileButton>:
    app: app
    size_hint: (None, None)
    size: (350, 65)
    background_normal: ''
    background_color:
        app.settings['standard color'] if self.text[0:2] != 'e.' \
        else app.settings['encrypt color']
    font_size: '22sp'
    color: (0,0,0,1)
    bold: True

<PrimaryButton@Button>:
    size_hint: (None, None)
    size: (280, 75)


# Load file screen for the user with labels and buttons
# This is a class, automatically bound to the class declaration with the same name
# in the inventory.py file. A class declaration found in both the .kv and .py files can only
# inherit from another class in the .py file. The following would overwrite the LoadFileScreen
# declaration in inventory.py instead of binding it: <LoadFileScreen@Screen>:
<LoadFileScreen>:
    # Make the file_button_parent attribute accessible to the .py file
    # See underneath class declaration in screens.py
    file_button_parent: file_button_parent
    # Name used by the screen manager
    name: 'load file'

    # The main widget layout that all children will be placed in
    GridLayout:
        size_hint: (1, 1)
        cols: 1

        # Center the contained Title widget in this CenterAnchorLayout widget
        # This will be positioned on the top of the screen
        CenterAnchorLayout:
            # Make sure the y size hint is None so we can manually choose the height
            size_hint_y: None
            height: 100
            Label:
                font_size: '60sp'
                text: 'My Inventory'
                color: (1, .7, .25, 1)

        # Center the contained layouts underneath the above layout+title widget
        CenterAnchorLayout:
            size_hint_y: None  # Manually set height
            height: 60
            # Use this grid to fill widgets in horizontally
            GridLayout:
                # Set the width so we can force this widget and its children into
                # the center of the screen. Without this, the widget would default
                # to the left side of the screen
                size_hint_x: None
                width: 520
                rows: 1  # 1 row and unlimited columns
                # Label on the left side underneath the title
                CenterAnchorLayout:
                    anchor_x: 'right'
                    size_hint_x: None
                    width: 285
                    Label:
                        font_size: 26
                        text: 'Load an inventory below or'
                # Button on the right side underneath the title
                CenterAnchorLayout:
                    anchor_x: 'right'
                    Button:
                        size: (200, 40)
                        text: 'create a new inventory'
                        pos_hint: {'center_x': .5}
                        on_release:
                            app.changeScreen(screen='create file')

        # This fills the rest of the screen underneath the title and instructions
        ScrollView:
            size_hint: (1, 1)  # Fill the rest of the screen
            bar_width: 25      # Make sure users know they can scroll
            # Allow using the bar or click and drag to scroll
            scroll_type: ['bars', 'content']
            # Background color for the widget
            # Using canvas.before allows us to see the child widgets by sending
            # the canvas behind everything
            canvas.before:
                Color:
                    rgba: .12, .12, .12, 1
                Rectangle:
                    pos: self.pos
                    size: self.size

            # Use this grid to fill in buttons for each file in the .py file
            GridLayout:
                id: file_button_parent
                # Fill the entire width of the screen
                size_hint_x: 1
                cols: 1
                # Allow ScrollView to scroll (next two lines)
                size_hint_y: None
                height: self.minimum_height
                # Make each row 90 pixels high
                row_default_height: 90
                row_force_default: True


<CreateFileScreen>:
    encrypted_checkbox: encrypted_checkbox
    file_name_input: file_name_input
    id: create_file_screen
    # Name used by the screen manager
    name: 'create file'

    # The main widget layout that all children will be placed in
    GridLayout:
        size_hint: (1, 1)
        cols: 1

        # Center the contained Title widget in this CenterAnchorLayout widget
        # This will be positioned on the top of the screen
        CenterAnchorLayout:
            # Make sure the y size hint is None so we can manually choose the height
            size_hint_y: None
            height: 100
            Label:
                font_size: '60sp'
                text: 'My Inventory'
                color: (1, .7, .25, 1)

        # Center the contained layouts underneath the above layout+title widget
        CenterAnchorLayout:
            size_hint_y: None  # Manually set height
            height: 60
            # Use this grid to fill widgets in horizontally
            GridLayout:
                # Set the width so we can force this widget and its children into
                # the center of the screen. Without this, the widget would default
                # to the left side of the screen
                size_hint_x: None
                width: 520
                rows: 1  # 1 row and unlimited columns
                # Label on the left side underneath the title
                CenterAnchorLayout:
                    anchor_x: 'right'
                    size_hint_x: None
                    width: 285
                    Label:
                        font_size: 26
                        text: 'Create an inventory below or'
                # Button on the right side underneath the title
                CenterAnchorLayout:
                    anchor_x: 'right'
                    Button:
                        size: (200, 40)
                        text: 'load an inventory'
                        on_release:
                            app.changeScreen(screen='load file')

        # This fills the rest of the screen underneath the title and instructions
        ScrollView:
            size_hint: (1, 1)  # Fill the rest of the screen
            bar_width: 20      # Make sure users know they can scroll
            # Allow using the bar or click and drag to scroll
            scroll_type: ['bars', 'content']
            # Background color for the widget
            # Using canvas.before allows us to see the child widgets by sending
            # the canvas behind everything
            canvas.before:
                Color:
                    rgba: .12, .12, .12, 1
                Rectangle:
                    pos: self.pos
                    size: self.size

            # Use this grid to fill in buttons for each file in the .py file
            GridLayout:
                id: file_button_parent
                # Fill the entire width of the screen
                size_hint_x: 1
                cols: 1
                # Allow ScrollView to scroll (next two lines)
                size_hint_y: None
                height: self.minimum_height
                # Make each row 90 pixels high
                row_default_height: 100
                row_force_default: True

                CenterAnchorLayout:
                    GridLayout:
                        padding: 10
                        cols: 1
                        size_hint_x: None
                        width: 300
                        Label:
                            text: 'Inventory name:'
                            font_size: 20
                        TextInput:
                            id: file_name_input
                            font_size: 20
                            focus: True if app.sm.current_screen == create_file_screen else False

                CenterAnchorLayout:
                    GridLayout:
                        padding: 10
                        size_hint_x: None
                        width: 300
                        rows: 1
                        Label:
                            text: 'Encrypt file'
                            font_size: 16
                        CheckBox:
                            id: encrypted_checkbox

                CenterAnchorLayout:
                    Button:
                        size_hint: (None, None)
                        font_size: '22sp'
                        bold: True
                        size: (150, 60)
                        text: 'Create'
                        on_release: create_file_screen.checkUserInputFormat()

